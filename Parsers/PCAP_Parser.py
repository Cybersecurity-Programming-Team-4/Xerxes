#!/usr/bin/python3

from xml.etree import ElementTree
import logging
import subprocess
import os
import datetime

class PCAP_Parser:
    # Convert PCAP to XML: tshark -r inFile.pcap -T pdml > outFile.xml
    BASE_DIR = os.getcwd()
    TSHARK_BIN = ''
    OUT_DIR = BASE_DIR + '/OutFiles/'

    def __init__(self, pcap_file):
        self.pcapf = pcap_file
        self.xmlf = ''

    def parse(self):
        # <Packet>
        #   |
        #   <Proto Name=eth>
        #       |
        #       <Field Name=eth.dst_resolved, Show (VENDOR_PREFIX:XX:XX:XX)
        #              Name=eth.addr, Show (XX:XX:XX:XX:XX:XX)>
        #   <Proto Name=ip>
        #       |
        #       <Field Name=ip.src, Show (xxx.xxx.xxx.xxx)
        #   <Proto Name=tcp>
        #       |
        #       <Field Name=tcp.flags>
        #           |
        #           <Field Name=tcp.flags.rst, Value (0 or 1)
        #       <Field Name=tcp.stream, Show (x)>
        #
        #
        #
        #

        MAC_ADDDRESS_SET = set()

        try:
            xFile = ElementTree.parse(self.xmlf)
        except FileNotFoundError as e:
            logging.exception('Could not find XML file generated by Tshark.', e)
            return
        root = xFile.getroot()



        #for p in protos:
            #els = root.findall(".//proto[@name=\'{}\']/..packet".format(p))



    def genXMLFromPCAP(self):
        self.xmlf = PCAP_Parser.OUT_DIR + 'xerxes-tshark-out-{}.xml'.format(datetime.datetime.now())
        proc_done = subprocess.run([PCAP_Parser.TSHARK_BIN, '-r', self.pcapf, '-T', 'pdml', '>', self.xmlf])
        if proc_done.returncode == 0:
            logging.debug('Tshark finished with return code 0. Args: {}'.format(proc_done.args))
        else:
            logging.error('Tshark finished with return code {}.'.format(proc_done.returncode))