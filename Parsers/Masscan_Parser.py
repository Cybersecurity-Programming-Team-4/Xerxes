#!/usr/bin/python3
import sys
sys.path.insert(0,"..\\Database_API")
import Xerxes_SQL
from xml.dom import minidom
import datetime
import socket

def getHostName(IPAddress):
    try:
        name = socket.gethostbyaddr(IPAddress)[0] # function returns a triple, gets the name from first element
    except:
        name = "DNS Resolution Failure"
    return  name

# Function to parse the XML file generated by Masscan and stores the results in the cloud DB
def store_scan_results(file_name):
    db = Xerxes_SQL.connect_database()     # connect to the DB via credentials

    xmldoc = minidom.parse(file_name)   # Parse the xml file
    hosts = xmldoc.getElementsByTagName('host') # Gets list of hosts scanned

    # Grabs finish time of the completed scan by Masscan

    for host in hosts:
        print(host.getElementsByTagName('address')[0].attributes['addr'].value)
        timeStr = datetime.datetime.fromtimestamp(int(host.attributes['endtime'].value)).strftime('%Y-%m-%d %H:%M:%S')
        portsList = host.getElementsByTagName('port')
        address = host.getElementsByTagName('address')[0].attributes['addr'].value
        region = Xerxes_SQL.get_IP_region(db, address)
        returnedName = getHostName(address)
        addressType = host.getElementsByTagName('address')[0].attributes['addrtype'].value
        for port in portsList:
            serviceList = port.getElementsByTagName('service')
            if len(serviceList) == 0:
                Xerxes_SQL.insert_into_site_open_services(db, address, port.attributes['portid'].value, "None", "None")
            else:
                for service in serviceList:
                    Xerxes_SQL.insert_into_site_open_services(db, address, port.attributes['portid'].value, service.attributes['name'].value, service.attributes['banner'].value)
        Xerxes_SQL.insert_site_entry(db, address, returnedName, addressType, region, "Unknown", 0, timeStr)

    db.close()

if __name__ == "__main__":
    store_scan_results(sys.argv[1])
